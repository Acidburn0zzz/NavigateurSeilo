cmake_minimum_required(VERSION 3.6)
project(sielo-browser)

add_subdirectory(Core)
add_subdirectory(SNCompiler)
include_directories(${CMAKE_SOURCE_DIR})
include_directories(${CMAKE_SOURCE_DIR}/Core)
include_directories(${CMAKE_SOURCE_DIR}/third-party/includes)

if(MSVC)
    set (CMAKE_PREFIX_PATH "C:\\Qt\\5.10.1\\msvc2017_64\\")
    set (ENV{OPENSSL_ROOT_DIR} "${CMAKE_SOURCE_DIR}\\third-party\\openssl\\x64\\")
    set (ENV{OPENSSL_CRYPTO_LIBRARY} "${CMAKE_SOURCE_DIR}\\third-party\\openssl\\x64\\")
elseif(GNU)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
endif()

set(SOURCE_FILES Main.cpp)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

find_package(OpenSSL 1.1.0 REQUIRED)
find_package(Qt5Widgets 5.8 REQUIRED)
find_package(Qt5Sql 5.8 REQUIRED)
find_package(Qt5WebEngine 5.8 REQUIRED)
find_package(Qt5WebEngineWidgets 5.8 REQUIRED)

if (MSVC)
    add_executable(sielo-browser WIN32 ${SOURCE_FILES} icons.qrc data.qrc ic_sielo.rc)
else()
    add_executable(sielo-browser ${SOURCE_FILES} icons.qrc data.qrc)
endif()

target_link_libraries(sielo-browser Core)
target_link_libraries(sielo-browser ${OPENSSL_LIBRARIES})
target_link_libraries(sielo-browser Qt5::Widgets)
target_link_libraries(sielo-browser Qt5::Sql)
target_link_libraries(sielo-browser Qt5::WebEngine)
target_link_libraries(sielo-browser Qt5::WebEngineWidgets)

